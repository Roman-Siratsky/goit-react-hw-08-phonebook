{"version":3,"sources":["redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookOperations.js","redux/phoneBook/phoneBookSelectors.js","components/ContactForm.jsx","components/Filter.jsx","components/Modal.jsx","components/EditContactForm.jsx","components/Contact.jsx","components/ContactList.jsx","components/Contacts.jsx","redux/authorization/authActions.js","redux/authorization/authOperations.js","components/UserMenu.jsx","redux/authorization/authSelectors.js","components/AuthMenu.jsx","components/Header.jsx","components/Register.jsx","components/Login.jsx","components/PublicRoute.jsx","components/PrivateRoute.jsx","components/Home.jsx","App.js","redux/phoneBook/phoneBookReducer.js","redux/authorization/authReducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","editContactRequest","editContactSuccess","editContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","actions","get","then","data","catch","error","getContacts","state","phoneBook","contacts","getFilter","filter","getVisibleContacts","createSelector","optimizedFilter","toLowerCase","name","includes","ContactForm","number","handleNameChange","event","currentTarget","value","setState","handleNumberChange","onExistingContactAlert","preventDefault","alert","getSomeOfName","optimizedContactName","props","some","this","onAddNewContact","existingContact","className","TextField","label","variant","type","onChange","Button","color","disabled","length","Number","onClick","e","Component","connect","contact","post","addContact","useStyles","makeStyles","theme","textField","width","padding","handleFilterChange","window","classes","placeholder","autoComplete","modalRef","document","getElementById","Modal","onEscape","code","toggleModal","console","log","onOverlayClick","target","addEventListener","removeEventListener","children","createPortal","EditContactForm","editContact","contactId","id","credentials","patch","card","display","justifyContent","alignItems","paddingLeft","paddingRight","Contact","num","onDeleteContact","index","onEditContact","useState","modal","setModal","currentId","setCurrentId","Card","CardMedia","CardContent","Typography","align","toUpperCase","split","map","digit","join","CardActions","ContactList","shortId","generate","delete","deleteContact","Contacts","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logOutRequest","logOutSuccess","logOutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","token","headers","common","Authorization","logOut","a","message","Toolbar","noWrap","userName","to","getIsAuthorized","authorization","isLoggedIn","getUserName","user","AuthMenu","appBar","flexDirection","CssBaseline","AppBar","position","registerUser","setName","email","setEmail","password","setPassword","loginUser","component","redirectTo","routeProps","render","restricted","Home","App","onGetCurrentUser","exact","path","Register","Login","getState","persistedToken","createReducer","action","payload","loading","combineReducers","initialUserState","_","__","authPersistConfig","key","storage","whitelist","rootReducer","phoneBookReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.032b418f.chunk.js","sourcesContent":["// import * as types from './phoneBookTypes'\r\nimport shortId from 'shortid'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n// import axios from 'axios'\r\nexport const fetchContactsRequest = createAction('phoneBook/fetchContactsRequest')\r\nexport const fetchContactsSuccess = createAction('phoneBook/fetchContactsSuccess')\r\nexport const fetchContactsError = createAction('phoneBook/fetchContactsError')\r\n\r\nexport const addContactRequest = createAction('phoneBook/addContactRequest')\r\nexport const addContactSuccess = createAction('phoneBook/addContactSuccess')\r\nexport const addContactError = createAction('phoneBook/addContactError')\r\n  \r\nexport const deleteContactRequest = createAction('phoneBook/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('phoneBook/deleteContactSuccess')\r\nexport const deleteContactError = createAction('phoneBook/deleteContactError')\r\n  \r\nexport const editContactRequest = createAction('phoneBook/editContactRequest')\r\nexport const editContactSuccess = createAction('phoneBook/editContactSuccess')\r\nexport const editContactError = createAction('phoneBook/editContactError')\r\n  \r\n\r\nexport const changeFilter = createAction('phoneBook/filter')\r\nexport const makeAlert = createAction('phoneBook/alert')\r\n\r\n","import axios from 'axios'\r\nimport * as actions from './phoneBookActions'\r\n// axios.defaults.baseURL = 'http://localhost:3000'\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/'\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(actions.fetchContactsRequest())\r\n    axios.get('/contacts')\r\n        .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error)))\r\n}\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = { name, number }\r\n    \r\n    dispatch(actions.addContactRequest())\r\n    axios.post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(error => dispatch(actions.addContactError(error)))\r\n}\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(actions.deleteContactRequest())\r\n     axios.delete('/contacts/' + id)\r\n        .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n        .catch(error => dispatch(actions.deleteContactError(error)))\r\n}\r\nexport const editContact = (id, credentials) => dispatch => {\r\n    dispatch(actions.editContactRequest())\r\n     axios.patch('/contacts/' + id, credentials)\r\n        .then(() => dispatch(actions.editContactSuccess(id, credentials)))\r\n        .catch(error => dispatch(actions.editContactError(error)))\r\n}","import {createSelector} from '@reduxjs/toolkit'\r\n\r\nexport const getContacts = state => state.phoneBook.contacts\r\n\r\nexport const getFilter = state => state.phoneBook.filter\r\n\r\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    const optimizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(optimizedFilter));\r\n})\r\n// export const getVisibleContacts = state => {\r\n//     const contacts = getContacts(state)\r\n//     const filter = getFilter(state)\r\n//     const optimizedFilter = filter.toLowerCase()\r\n//     return contacts.filter(({name}) => name.toLowerCase().includes(optimizedFilter))\r\n// }\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect } from 'react-redux'\r\nimport { addContact } from '../redux/phoneBook/phoneBookOperations'\r\nimport { getContacts } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { TextField, Button, Input } from '@material-ui/core'\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: '+38'\r\n    }\r\n    handleNameChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({ [name]: value })\r\n    }\r\n    handleNumberChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name]: value})\r\n    }\r\n    onExistingContactAlert = (event) => {\r\n        event.preventDefault()\r\n        this.setState({name: '', number: '+38'})\r\n        alert(this.state.name + ' уже есть в списке контактов')\r\n    }\r\n\r\n    getSomeOfName = (name) => {\r\n        const optimizedContactName = name.toLowerCase();\r\n        return this.props.contacts.some(({name}) => name.toLowerCase() === optimizedContactName)\r\n      }\r\n    \r\n    render() {\r\n        const {handleNameChange, handleNumberChange} = this\r\n        const { onAddNewContact } = this.props\r\n        const { name, number } = this.state\r\n        const existingContact = this.getSomeOfName(name)\r\n    return (\r\n        <form className='main-form'>\r\n            <div>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    label=\"Number\"\r\n                    name='number'\r\n                    variant=\"outlined\"\r\n                    type='tel'\r\n                    value={number}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type='submit'\r\n                    disabled={(name.length && number.length === 13 && Number(number)) \r\n                        ? false\r\n                        : true\r\n                    }\r\n                        onClick={existingContact\r\n                            ? this.onExistingContactAlert \r\n                            : (e) => {\r\n                                e.preventDefault()\r\n                                onAddNewContact(name, number)\r\n                                this.setState({name: '', number: '+38'})\r\n                    }}\r\n                >\r\n                Создать\r\n                </Button>\r\n            </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddNewContact: (name, number) => dispatch(addContact(name, number)),\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getContacts(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { changeFilter } from '../redux/phoneBook/phoneBookActions'\r\nimport { getFilter } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: '100%',\r\n    padding: '5px'\r\n  }\r\n}))\r\n\r\nconst Filter = (props) => {\r\n  window.props = props\r\n  const classes = useStyles()\r\n  return (\r\n    <TextField\r\n      className={classes.textField}\r\n      name='filter'\r\n      type='text'\r\n      placeholder='Search contacts'\r\n      value={props.value}\r\n      variant=\"outlined\"\r\n      autoComplete='off'\r\n      onChange={props.handleFilterChange}\r\n      />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleFilterChange: (e) => dispatch(changeFilter(e.currentTarget.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport {createPortal} from 'react-dom'\r\nconst modalRef = document.getElementById('modal')\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onEscape)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.onEscape)\r\n    }\r\n\r\n    onEscape = (e) => {\r\n            if (e.code === 'Escape') {\r\n                this.props.toggleModal()\r\n                console.log(e.code);\r\n            }\r\n    } \r\n\r\n    onOverlayClick = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.toggleModal()\r\n        }\r\n    }\r\n    render() {\r\n        console.log('this.props.children :>> ', this.props.children);\r\n        return createPortal(<div onClick={this.onOverlayClick} className='overlay'>\r\n            <div className='modal'>\r\n                {this.props.children}\r\n            </div>\r\n        </div>, modalRef)\r\n    }\r\n}\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport {connect } from 'react-redux'\r\nimport { editContact, fetchContacts } from '../redux/phoneBook/phoneBookOperations'\r\nimport { getContacts } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { TextField, Button, Input } from '@material-ui/core'\r\n\r\nclass EditContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: '+38'\r\n    }\r\n    handleNameChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({ [name]: value })\r\n    }\r\n    handleNumberChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name]: value})\r\n    }\r\n    onExistingContactAlert = (event) => {\r\n        event.preventDefault()\r\n        this.setState({name: '', number: '+38'})\r\n        alert(this.state.name + ' уже есть в списке контактов')\r\n    }\r\n\r\n    getSomeOfName = (name) => {\r\n        const optimizedContactName = name.toLowerCase();\r\n        return this.props.contacts.some(({name}) => name.toLowerCase() === optimizedContactName)\r\n      }\r\n    \r\n    render() {\r\n        const {handleNameChange, handleNumberChange} = this\r\n        const { editContact, contactId } = this.props\r\n        const { name, number } = this.state\r\n        const existingContact = this.getSomeOfName(name)\r\n    return (\r\n        <form className='edit-form'>\r\n            <div>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    label=\"Number\"\r\n                    name='number'\r\n                    variant=\"outlined\"\r\n                    type='tel'\r\n                    value={number}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type='submit'\r\n                    disabled={(name.length && number.length === 13 && Number(number)) \r\n                        ? false\r\n                        : true\r\n                    }\r\n                        onClick={existingContact\r\n                            ? this.onExistingContactAlert \r\n                            : (e) => {\r\n                                e.preventDefault()\r\n                                editContact(contactId, { name, number})\r\n                                this.setState({ name: '', number: '+38' })\r\n                                this.props.toggleModal()\r\n                                this.props.fetchContacts()\r\n                    }}\r\n                >\r\n                Изменить\r\n                </Button>\r\n            </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    editContact: (id, credentials) => dispatch(editContact(id, credentials)),\r\n    fetchContacts: () => dispatch(fetchContacts())\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getContacts(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);","import React, { useState } from 'react';\r\nimport { Button, Card, CardActions, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Modal from './Modal'\r\nimport EditContactForm from './EditContactForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingLeft: '10px',\r\n    paddingRight: '10px'\r\n  }\r\n}))\r\n\r\nconst Contact = ({ contact, index, onDeleteContact, onEditContact }) => {\r\n  const classes = useStyles()\r\n  const [modal, setModal] = useState(false)\r\n  const [currentId, setCurrentId] = useState(null)\r\n\r\n  const toggleModal = (id) => {\r\n    setModal(!modal)\r\n    setCurrentId(id)\r\n  }\r\n  \r\n  const getTelephoneForm = (num) => {\r\n    const numArray = num.split('')\r\n    return numArray.map((digit, index) => {\r\n      if (index === 3) return `(${digit}`\r\n      if (index === 6) return `)${digit}`\r\n      return digit\r\n    }).join('')\r\n  }\r\n  return (\r\n          <li className='contact-item' key={contact.id}>\r\n        <Card className={classes.card}>\r\n          <CardMedia>\r\n            <PhoneIcon/>\r\n          </CardMedia>\r\n        <CardContent>\r\n          <Typography align='center' variant='h6'>{contact.name.toUpperCase() + \" : \" + getTelephoneForm(contact.number)}\r\n          </Typography>\r\n        </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type='button'\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            >\r\n            Delete\r\n            </Button>\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            type='button'\r\n            onClick={() => toggleModal(contact.id)}\r\n            >\r\n            Edit\r\n            </Button>\r\n          {modal && <Modal toggleModal={toggleModal}>\r\n            <EditContactForm toggleModal={toggleModal} contactId={currentId}/>\r\n          </Modal>}\r\n          </CardActions>\r\n            </Card>\r\n          </li>\r\n  )\r\n}\r\nexport default Contact","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { deleteContact, editContact, fetchContacts } from '../redux/phoneBook/phoneBookOperations';\r\nimport shortId from 'shortid'\r\nimport {getVisibleContacts} from '../redux/phoneBook/phoneBookSelectors'\r\nimport { Typography } from '@material-ui/core';\r\nimport Contact from './Contact'\r\n\r\n\r\n\r\nclass ContactList extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: '+38',\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchContacts()\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          this.props.contacts.length\r\n          ? this.props.contacts.map((contact, index) => {\r\n            return (\r\n              <Contact\r\n                contact={contact}\r\n                index={index}\r\n                onDeleteContact={this.props.onDeleteContact}\r\n                // onEditContact={this.props.onEditContact}\r\n              />\r\n            )\r\n          })\r\n          : <li className='no_contacts' key={shortId.generate()}>\r\n              <Typography align='center' variant='h3'>No saved contacts yet</Typography>\r\n            </li>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleContacts(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n  // onEditContact: (id) => dispatch(editContact(id)),\r\n  fetchContacts: () => dispatch(fetchContacts())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import ContactForm from './ContactForm'\r\nimport Filter from './Filter'\r\nimport ContactList from './ContactList'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <div className='container'>\r\n        <div><ContactForm /></div>\r\n          <div className='contacts'>\r\n            <Typography align='center' variant='h6'>Contacts</Typography>\r\n            <Filter/>\r\n          <ul>\r\n            <ContactList/>\r\n         </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contacts;","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const registerRequest = createAction('auth/registerRequest')\r\nexport const registerSuccess = createAction('auth/registerSuccess')\r\nexport const registerError = createAction('auth/registerError')\r\n\r\nexport const loginRequest = createAction('auth/loginRequest')\r\nexport const loginSuccess = createAction('auth/loginSuccess')\r\nexport const loginError = createAction('auth/loginError')\r\n\r\nexport const logOutRequest = createAction('auth/logOutRequest')\r\nexport const logOutSuccess = createAction('auth/logOutSuccess')\r\nexport const logOutError = createAction('auth/logOutError')\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError')\r\n","import {\r\n    registerRequest, registerSuccess,\r\n    registerError, loginRequest,\r\n    loginSuccess, loginError,\r\n    getCurrentUserRequest, getCurrentUserSuccess,\r\n    getCurrentUserError, logOutRequest,\r\n    logOutSuccess, logOutError\r\n} from './authActions'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/'\r\n\r\nconst token = {\r\n    setToken(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    },\r\n    unSetToken() {\r\n        axios.defaults.headers.common.Authorization = ``\r\n    }\r\n}\r\n\r\nexport const register = credentials => async dispatch => {\r\n    dispatch(registerRequest())\r\n    try {\r\n        const { data } = await axios.post('users/signup', credentials)\r\n        token.setToken(data.token)\r\n        dispatch(registerSuccess(data))\r\n    } catch(error) {\r\n        dispatch(registerError(error.message))\r\n    }\r\n}\r\nexport const login = credentials => async dispatch => {\r\n    dispatch(loginRequest())\r\n    try {\r\n        const { data } = await axios.post('users/login', credentials)\r\n        token.setToken(data.token)\r\n        dispatch(loginSuccess(data))\r\n    } catch(error) {\r\n        dispatch(loginError(error.message))\r\n    }  \r\n}\r\nexport const logOut = () => async dispatch => {\r\n    dispatch(logOutRequest())\r\n    try {\r\n        await axios.post('users/logout')\r\n        token.unSetToken()\r\n        dispatch(logOutSuccess())\r\n    } catch(error) {\r\n        dispatch(logOutError(error.message))\r\n    }  \r\n}\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        authorization: {token: persistedToken},\r\n    } = getState()\r\n\r\n    if (!persistedToken) {\r\n        return\r\n    }\r\n    token.setToken(persistedToken)\r\n    dispatch(getCurrentUserRequest())\r\n    try {\r\n        const { data } = await axios.get('users/current')\r\n        dispatch(getCurrentUserSuccess(data))\r\n    } catch(error) {\r\n        dispatch(getCurrentUserError(error.message))\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Toolbar, Typography, Button } from '@material-ui/core'\r\nimport { logOut } from '../redux/authorization/authOperations'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst UserMenu = (props) => {\r\n  return (\r\n    <Toolbar>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Welcome, {props.userName}\r\n            </Typography>\r\n            <NavLink className='navLink' to='/login'>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n          noWrap\r\n          type='button'\r\n                onClick={props.logOut}\r\n              >\r\n              Logout\r\n            </Button>\r\n            </NavLink>\r\n    </Toolbar>\r\n  )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  logOut: () => dispatch(logOut())\r\n}) \r\n\r\nexport default connect(null, mapDispatchToProps)(UserMenu)","export const getIsAuthorized = (state) => state.authorization.isLoggedIn\r\nexport const getUserName = (state) => state.authorization.user.name","import { Toolbar, Typography } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\nconst AuthMenu = () => {\r\n  return (\r\n    <Toolbar>\r\n            <NavLink className='navLink' to='/register'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Register\r\n            </Typography>\r\n            </NavLink>\r\n            <NavLink className='navLink' to='/login'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Login\r\n            </Typography>\r\n            </NavLink>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default AuthMenu","import React from 'react'\r\nimport { CssBaseline, AppBar, Toolbar, Typography} from '@material-ui/core'\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport UserMenu from './UserMenu'\r\nimport {getIsAuthorized, getUserName} from '../redux/authorization/authSelectors'\r\nimport AuthMenu from './AuthMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row'\r\n  }\r\n}))\r\n\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles()\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <AppBar className={classes.appBar} position=\"relative\"> \r\n          <Toolbar>\r\n            <ContactsIcon />\r\n            <NavLink className='navLink' to='/'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Home\r\n            </Typography>\r\n            </NavLink>\r\n            {props.isLoggedIn && <NavLink className='navLink' to='/contacts'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              PhoneBook\r\n            </Typography>\r\n            </NavLink>}\r\n          </Toolbar>\r\n          {props.isLoggedIn ? <UserMenu userName={props.userName}/> : <AuthMenu/>}\r\n          </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: getIsAuthorized(state),\r\n  userName: getUserName(state)\r\n})\r\nexport default connect(mapStateToProps)(Header)","import React, { useState } from 'react'\r\nimport {TextField, Button} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport {register, login} from '../redux/authorization/authOperations' \r\n//ProezdPoMostu\r\n//Proezd1010\r\nconst Register = (props) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleNameChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setName(value)\r\n    }\r\n    const handleEmailChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setEmail(value)\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setPassword(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.registerUser({name, email, password})\r\n        setName('')\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n    return (\r\n      <div className='register-container'>\r\n          <form className='register-form'>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name='email'\r\n                    variant=\"outlined\"\r\n                    type='email'\r\n                    value={email}\r\n                        onChange={handleEmailChange}\r\n                        autoComplete='off'\r\n                />\r\n          </div>\r\n          <div className='register-item'>\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name='password'\r\n                    variant=\"outlined\"\r\n                    type='password'\r\n                    value={password}\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete='off'\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                >\r\n                Зарегистрироваться\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    registerUser: (data) => dispatch(register(data)) \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Register)","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport {login} from '../redux/authorization/authOperations'\r\nimport { connect } from 'react-redux'\r\n// import { PinDropSharp } from '@material-ui/icons'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleEmailChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setEmail(value)\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setPassword(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.loginUser({email, password})\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n    return (\r\n      <div className='register-container'>\r\n          <form className='register-form'>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name='email'\r\n                    variant=\"outlined\"\r\n                    type='email'\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                />\r\n          </div>\r\n          <div className='register-item'>\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name='password'\r\n                    variant=\"outlined\"\r\n                    type='password'\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                >\r\n                Войти\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loginUser: (data) => dispatch(login(data))\r\n}) \r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {getIsAuthorized} from '../redux/authorization/authSelectors'\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isLoggedIn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => \r\n      isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n          <Component {...props}/>\r\n      )\r\n    }\r\n  />\r\n)\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsAuthorized(state)\r\n})\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {getIsAuthorized} from '../redux/authorization/authSelectors'\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isLoggedIn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => \r\n      isLoggedIn ? <Component {...props}/> : <Redirect to={redirectTo}/>\r\n    }\r\n  />\r\n)\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsAuthorized(state)\r\n})\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home-container'>\r\n      <Typography align='center' variant='h1'>Contacts Servise</Typography>\r\n    </div>\r\n    \r\n  )\r\n}\r\nexport default Home;","import React from 'react'\nimport { Component } from 'react';\nimport Contacts from './components/Contacts'\nimport './sass/main.scss'\nimport Header from './components/Header'\nimport { Switch } from 'react-router';\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport {getCurrentUser} from './redux/authorization/authOperations'\nimport { connect } from 'react-redux';\nimport PublicRoute from './components/PublicRoute'\nimport PrivateRoute from './components/PrivateRoute'\nimport Home from './components/Home'\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onGetCurrentUser()\n  }\n  render() {\n    return (\n    <>\n        <Header />\n        <div className='whole_app'>\n          <Switch>\n          <PublicRoute\n            exact path='/'\n            component={Home}\n          />\n          <PrivateRoute\n            path='/contacts'\n            component={Contacts}\n            redirectTo='/login'\n          />\n          <PublicRoute\n            path='/register'\n            component={Register}\n            restricted redirectTo='/contacts'\n          />\n          <PublicRoute\n            path='/login'\n            component={Login}\n            restricted\n            redirectTo='contacts'\n          />\n        </Switch>\n        </div>\n      </>\n  )\n  }\n} \n\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetCurrentUser: () => dispatch(getCurrentUser())\n})\nexport default connect(null, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux'\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport * as actions from './phoneBookActions'\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.fetchContactsSuccess]: (state, action) => action.payload,\r\n    [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [actions.deleteContactSuccess]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (state, action) => action.payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [actions.addContactRequest]: () => true,\r\n    [actions.addContactSuccess]: () => false,\r\n    [actions.addContactError]: () => false,\r\n    [actions.deleteContactRequest]: () => true,\r\n    [actions.deleteContactSuccess]: () => false,\r\n    [actions.deleteContactError]: () => false,\r\n})\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n})\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    registerRequest, registerSuccess,\r\n    registerError, loginRequest,\r\n    loginSuccess, loginError,\r\n    getCurrentUserRequest, getCurrentUserSuccess, getCurrentUserError,\r\n    logOutRequest,\r\n    logOutSuccess, logOutError\r\n} from './authActions'\r\n\r\nconst initialUserState = { name: null, email: null }\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [registerSuccess]: (_, { payload }) => payload.user,\r\n    [loginSuccess]: (_, { payload }) => payload.user,\r\n    [logOutSuccess]: () => initialUserState,\r\n    [getCurrentUserSuccess]: (_, {payload}) => payload,\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [registerSuccess]: (_, { payload }) => payload.token,\r\n    [loginSuccess]: (_, { payload }) => payload.token,\r\n    [logOutSuccess]: (_, __) => null,\r\n})\r\nconst error = createReducer(null, {\r\n    [registerError]: (_, action) => action.payload,\r\n    [loginError]: (_, action) => action.payload,\r\n    [logOutError]: (_, { payload }) => payload,\r\n    [getCurrentUserError]: (_, {payload}) => payload\r\n})\r\nconst isLoggedIn = createReducer(false, {\r\n    [registerSuccess]: () => true,\r\n    [loginSuccess]: () => true,\r\n    [getCurrentUserSuccess]: () => true,\r\n    [logOutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    isLoggedIn,\r\n    error\r\n})","import {configureStore, getDefaultMiddleware, combineReducers} from '@reduxjs/toolkit'\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\r\nimport logger from 'redux-logger'\r\nimport authReducer from './authorization/authReducer'\r\nimport storage from 'redux-persist/lib/storage' \r\nimport \r\n{\r\n    persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n}from 'redux-persist'\r\n\r\n\r\nconst authPersistConfig = {\r\n    key: 'token',\r\n    storage,\r\n    whitelist: ['token']\r\n}\r\nconst rootReducer = combineReducers({\r\n    phoneBook: phoneBookReducer,\r\n    authorization: persistReducer(authPersistConfig, authReducer)\r\n})\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        },\r\n    }),\r\n    logger,\r\n    ]\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n \r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {store, persistor}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Loading'} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}